# Configuration for real GitHub integration tests
# Requires environment variables: GITHUB_TOKEN
mcp_servers:
  - mcp_server_name: "github"
    command:
      - "npx"
      - "@notfolder/github-mcp-server"
      - "stdio"
    env:
      GITHUB_TOOLSETS: "all"
    system_prompt: |
      ### github mcp tools
      * `github/get_issue`           → `{ "owner": string, "repo": string, "issue_number": int }`
      * `github/get_file_contents`   → `{ "owner": string, "repo": string, "path": string, "ref": string }`
      * `github/create_or_update_file` → `{ "owner": string, "repo": string, "path": string, "content": string, "branch": string, "message": string }`
      * `github/create_pull_request` → `{ "owner": string, "repo": string, "title": string, "body": string, "head": string, "base": string }`
      * `github/update_issue`        → `{ "owner": string, "repo": string, "issue_number": int, "remove_labels"?: [string], "add_labels"?: [string] }`
      * `github/list_issues`         → `{ "owner": string, "repo": string, "state"?: string, "labels"?: string }`
      * `github/get_issue_comments`  → `{ "owner": string, "repo": string, "issue_number": int }`
      * `github/create_issue_comment` → `{ "owner": string, "repo": string, "issue_number": int, "body": string }`
      * `github/search_issues`       → `{ "q": string }`

llm:
  provider: "mock"
  function_calling: true
  mock:
    model: "test-model"
    max_token: 1000

github:
  owner: "notfolder"  # Test repository owner
  repo: "coding-agent-test"  # Test repository name
  bot_label: "coding agent"
  processing_label: "coding agent processing"
  done_label: "coding agent done"
  query: 'repo:notfolder/coding-agent-test state:open label:"coding agent"'

max_llm_process_num: 10
use_rabbitmq: false